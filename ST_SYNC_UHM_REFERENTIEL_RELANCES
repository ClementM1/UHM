AS 
/* 
****************** DOCUMENTATION TEMPLATE ******************** 
-- DID AUTHOR: ERICK VAN HOOREN 
-- DID CREATIONDATE: 2022-09-09  
-- DID VERSION: 1.0.0 
-- DID DESCRIPTION:  
-- DID BUSINESSRULES: EVERY DAY  
-- DID LASTMODIFIEDBY:  
******************* DOCUMENTATION TEMPLATE ********************  
*/ 


DECLARE @TASK NVARCHAR(50) = 'ST_SYNC_UHM_REFERENTIEL_RELANCES'; 


BEGIN 
SET NOCOUNT ON; 
BEGIN TRY 
 


-- ------------------ INIT -------------------- --  
-- TASK DETAILS TABLE 
IF OBJECT_ID('DBO.CFG_SYNCDETAILS', 'U') IS NULL 
BEGIN; 
  
    CREATE TABLE DBO.CFG_SYNCDETAILS ( 
        TASK NVARCHAR(50) NOT NULL CONSTRAINT PK_CFG_SYNCDETAILS PRIMARY KEY 
        , LAST_RUNDT DATETIME NULL 
        , LAST_SUCCESSDT DATETIME NULL 
        , LAST_RUNTIME NVARCHAR(8) NULL 
        , ERRORMSG NVARCHAR(MAX) NULL 
        , AQID BIGINT 
        , FGID BIGINT 
        , MTAID BIGINT 
    ); 
END; 
-- ------------------ LOGS -------------------- --  
IF EXISTS (SELECT 1 FROM DBO.CFG_SYNCDETAILS WHERE TASK = @TASK) 
BEGIN; 
    UPDATE DBO.CFG_SYNCDETAILS SET LAST_RUNDT = GETDATE(), ERRORMSG = NULL WHERE TASK = @TASK; 
END; 
ELSE 
BEGIN; 
    INSERT INTO DBO.CFG_SYNCDETAILS (TASK, LAST_RUNDT) VALUES (@TASK, GETDATE()); 
END; 
  
  
-- ------------------ REJECT MNGT ------------------ -- 
  
  
-- EMPTY BUSINESS KEY 
UPDATE TGT SET 
      TGT.OPTI_REJECTED        = 2 
    , TGT.OPTI_REJECTED_REASON = 'CODE_OPERATION_EDITEUR_REL' 
FROM DBO.SYNC_UHM_REFERENTIEL_RELANCES AS TGT 
WHERE (TGT.OPTI_REJECTED = 0  
OR TGT.OPTI_REJECTED IS NULL) 
AND (TGT.CODE_OPERATION_EDITEUR_REL IS NULL  
OR TGT.CODE_OPERATION_EDITEUR_REL = '')
;  
  
 
-- ------------------ Truncate ---------------- --

 TRUNCATE TABLE DATA_UHM_REFERENTIEL_RELANCES; 
 
-- ------------------ UPSERT ------------------ -- 
-- ...  INSERT 
INSERT INTO DBO.DATA_UHM_REFERENTIEL_RELANCES  
    ( CODE_OPERATION_EDITEUR_REL
    , ALIAS_OE_REL
    , LIBELLE_OE_REL
    , CODE_REFCO
    , ALIAS_REFCO
    , LIBELLE_REFCO
    , ORDRE
	, BACTWEB
    ) 
SELECT
      SRC.CODE_OPERATION_EDITEUR_REL
    , SRC.ALIAS_OE_REL
    , SRC.LIBELLE_OE_REL
    , SRC.CODE_REFCO
    , SRC.ALIAS_REFCO
    , SRC.LIBELLE_REFCO
    , SRC.ORDRE
	, CASE WHEN SRC.BACTWEB = 'O' then 1 else 0 END
FROM DBO.SYNC_UHM_REFERENTIEL_RELANCES AS SRC WITH(NOLOCK) 
WHERE  (SRC.OPTI_REJECTED = 0
OR SRC.OPTI_REJECTED IS NULL) 
; 
 
  
-- ------------------ END LOGS ------------------ -- 
   
UPDATE DBO.CFG_SYNCDETAILS SET 
    LAST_RUNTIME = CONVERT(NVARCHAR(8), GETDATE() - LAST_RUNDT, 114) 
    , LAST_SUCCESSDT = GETDATE() 
WHERE TASK = @TASK; 
  
  
END TRY   
  
-- ------------------ CATCH IF ERROR -------------------- -- 
  
BEGIN CATCH 
    -- DECLARATION - ERROR PART 
    DECLARE @ERRORMESSAGE NVARCHAR(4000);   
    DECLARE @ERRORSEVERITY INT;   
    DECLARE @ERRORSTATE INT; 
    -- INIT - ERROR PART 
    SET @ERRORMESSAGE = CONVERT(NVARCHAR(50), ERROR_LINE()) + ' : ' + ERROR_MESSAGE();   
    SET @ERRORSEVERITY = ERROR_SEVERITY();   
    SET @ERRORSTATE = ERROR_STATE();   
    -- UPDATING LOGS W/ ERROR MESSAGE 
    UPDATE DBO.CFG_SYNCDETAILS SET  
        ERRORMSG = CONVERT(NVARCHAR(20), GETDATE()) + ' - LIGNE ' + @ERRORMESSAGE 
        , LAST_RUNTIME = CONVERT(NVARCHAR(8), GETDATE() - LAST_RUNDT, 114) 
    WHERE TASK = @TASK; 
    -- RAISING ERROR 
    RAISERROR(@ERRORMESSAGE        -- MESSAGE TEXT.   
            , @ERRORSEVERITY    -- SEVERITY.   
            , @ERRORSTATE        -- STATE.   
    ); 
END CATCH 
  
  
END
