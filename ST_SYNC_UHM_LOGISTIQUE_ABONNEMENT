AS 
/* 
****************** DOCUMENTATION TEMPLATE ******************** 
-- DID AUTHOR: ERICK VAN HOOREN 
-- DID CREATIONDATE: 2022-09-09 
-- DID VERSION: 1.0.0 
-- DID DESCRIPTION:  
-- DID BUSINESSRULES: EVERY DAY  
-- DID LASTMODIFIEDBY: PENELOPE CASSIN 2023-06-15
******************* DOCUMENTATION TEMPLATE ********************  
*/ 


DECLARE @TASK NVARCHAR(50) = 'ST_SYNC_UHM_LOGISTIQUE_ABONNEMENT'; 


BEGIN 
SET NOCOUNT ON; 
BEGIN TRY 
 


-- ------------------ INIT -------------------- --  
-- TASK DETAILS TABLE 
IF OBJECT_ID('DBO.CFG_SYNCDETAILS', 'U') IS NULL 
BEGIN; 
  
    CREATE TABLE DBO.CFG_SYNCDETAILS ( 
        TASK NVARCHAR(50) NOT NULL CONSTRAINT PK_CFG_SYNCDETAILS PRIMARY KEY 
        , LAST_RUNDT DATETIME NULL 
        , LAST_SUCCESSDT DATETIME NULL 
        , LAST_RUNTIME NVARCHAR(8) NULL 
        , ERRORMSG NVARCHAR(MAX) NULL 
        , AQID BIGINT 
        , FGID BIGINT 
        , MTAID BIGINT 
    ); 
END; 
-- ------------------ LOGS -------------------- --  
IF EXISTS (SELECT 1 FROM DBO.CFG_SYNCDETAILS WHERE TASK = @TASK) 
BEGIN; 
    UPDATE DBO.CFG_SYNCDETAILS SET LAST_RUNDT = GETDATE(), ERRORMSG = NULL WHERE TASK = @TASK; 
END; 
ELSE 
BEGIN; 
    INSERT INTO DBO.CFG_SYNCDETAILS (TASK, LAST_RUNDT) VALUES (@TASK, GETDATE()); 
END; 
  
  
-- ------------------ PK & IDX ------------------ -- 
  
  
IF NOT EXISTS (SELECT 1 FROM SYS.INDEXES AS I WITH(NOLOCK) WHERE I.NAME = 'IDX_MATCH_NUM_LOGISTIQUE_ABONNEMENT' AND OBJECT_ID = OBJECT_ID('DBO.SYNC_UHM_LOGISTIQUE_ABONNEMENT', 'U')) 
BEGIN; 
    CREATE NONCLUSTERED INDEX IDX_MATCH ON [DBO].[SYNC_UHM_LOGISTIQUE_ABONNEMENT] ([NUM_LOGISTIQUE_ABONNEMENT]) /* INCLUDE ([X]) */ ; 
END;  

  
-- ------------------ REJECT MNGT ------------------ -- 
  
  
-- EMPTY BUSINESS ABO 
UPDATE TGT SET 
      TGT.OPTI_REJECTED        = 2 
    , TGT.OPTI_REJECTED_REASON = 'NUM_LOGISTIQUE_ABONNEMENT' 
FROM DBO.SYNC_UHM_LOGISTIQUE_ABONNEMENT AS TGT 
WHERE (TGT.OPTI_REJECTED = 0  
OR TGT.OPTI_REJECTED IS NULL) 
AND (TGT.NUM_LOGISTIQUE_ABONNEMENT IS NULL  
OR TGT.NUM_LOGISTIQUE_ABONNEMENT = '')
;  
  

-- ------------------ MATCH TABLE ------------------ --
 
 
-- check
IF OBJECT_ID('DBO.TMP_MATCH_ORD', 'U') IS NOT NULL
BEGIN;
    DROP TABLE DBO.TMP_MATCH_ORD;
END;
 
-- create
CREATE TABLE DBO.TMP_MATCH_ORD(
      SYNCID INT NOT NULL
    , USERID INT NOT NULL
    , PRIMARY KEY (SYNCID, USERID)
);
 
-- fill
INSERT INTO DBO.TMP_MATCH_ORD
    ( SYNCID
    , USERID )
SELECT    
      SRC.ID AS SYNCID
    , USR.ID AS USERID
FROM DBO.SYNC_UHM_LOGISTIQUE_ABONNEMENT AS SRC WITH(NOLOCK) 
    INNER JOIN dbo.USERS_UHM_CONTACTS AS USR WITH(NOLOCK) 
        ON SRC.NUM_CONTACT = USR.NUM_CONTACT
WHERE (SRC.OPTI_REJECTED = 0 
OR SRC.OPTI_REJECTED IS NULL);
 
  
-- ------------------ UPSERT ------------------ -- 
  
  
-- UPDATE FIRST... 
UPDATE TGT SET 
        -- NEVER UPDATE BUSINESS ABO 
          TGT.MODIFIED_DT                                    = GETDATE() 
        , TGT.NUM_COMMANDE                                   = SRC.NUM_COMMANDE
        , TGT.NUM_LIGNE_COMMANDE                             = SRC.NUM_LIGNE_COMMANDE     
        , TGT.SOCIETE                                        = SRC.SOCIETE
        , TGT.TITRE                                          = SRC.TITRE
        , TGT.TITRE_LIB                                      = SRC.TITRE_LIB
        , TGT.EDITION                                        = SRC.EDITION
        , TGT.NUM_PRODUIT                                    = SRC.NUM_PRODUIT
        , TGT.DATE_CREATION                                  = TRY_CONVERT(DATETIME,SRC.DATE_CREATION)
        , TGT.OPERATEUR_CREATION                             = SRC.OPERATEUR_CREATION
        , TGT.DATE_DERNIERE_MODIFICATION                     = TRY_CONVERT(DATETIME,SRC.DATE_DERNIERE_MODIFICATION)
        , TGT.OPERATEUR_MODIFICATION                         = SRC.OPERATEUR_MODIFICATION
        , TGT.NUM_CONTRAT                                    = SRC.NUM_CONTRAT
        , TGT.CODE_OPERATION_EDITEUR                         = SRC.CODE_OPERATION_EDITEUR
        , TGT.CODE_PROPOSITION_CO                            = SRC.CODE_PROPOSITION_CO
        , TGT.CODE_REF_CO                                    = SRC.CODE_REF_CO
        , TGT.NUM_DEBUT_ABO                                  = SRC.NUM_DEBUT_ABO
        , TGT.NUM_FIN_ABO                                    = SRC.NUM_FIN_ABO
        , TGT.NB_NUM_SOUSCRITS                               = SRC.NB_NUM_SOUSCRITS
        , TGT.QUANTITE                                       = SRC.QUANTITE
        , TGT.PREMIER_NUM_SERVI                              = SRC.PREMIER_NUM_SERVI
        , TGT.DATE_PREMIER_NUM_SERVI                         = TRY_CONVERT(DATETIME,SRC.DATE_PREMIER_NUM_SERVI)
        , TGT.DERNIER_NUM_SERVI                              = SRC.DERNIER_NUM_SERVI
        , TGT.DATE_DERNIER_NUM_SERVI                         = TRY_CONVERT(DATETIME,SRC.DATE_DERNIER_NUM_SERVI)
        , TGT.NUM_A_PARAITRE_REAB                            = SRC.NUM_A_PARAITRE_REAB
        , TGT.CODE_REGLEMENT                                 = SRC.CODE_REGLEMENT
        , TGT.CODE_VENTILATION                               = SRC.CODE_VENTILATION
        , TGT.CODE_SITUATION                                 = SRC.CODE_SITUATION
        , TGT.IDENTIFIANT_TARIFS                             = SRC.IDENTIFIANT_TARIFS
        , TGT.NUM_EVOLUTION                                  = SRC.NUM_EVOLUTION
        , TGT.MONTANT_PRODUIT_TTC                            = SRC.MONTANT_PRODUIT_TTC
        , TGT.CODE_ACHEMINEMENT                              = SRC.CODE_ACHEMINEMENT
        , TGT.MONTANT_ACHEMINEMENT_PRODUIT_TTC               = SRC.MONTANT_ACHEMINEMENT_PRODUIT_TTC
        , TGT.TX_REMISE_PRODUIT                              = SRC.TX_REMISE_PRODUIT
        , TGT.MONTANT_REMISE_PRODUIT                         = SRC.MONTANT_REMISE_PRODUIT
        , TGT.MONTANT_REMISE_SUPP_PRODUIT                    = SRC.MONTANT_REMISE_SUPP_PRODUIT
        , TGT.MONTANT_TOTAL_DU_PRODUIT_TTC                   = SRC.MONTANT_TOTAL_DU_PRODUIT_TTC
        , TGT.TOP_LOGISTIQUE_PRIME                           = SRC.TOP_LOGISTIQUE_PRIME
        , TGT.CODE_EXPEDITION                                = SRC.CODE_EXPEDITION
        , TGT.CODE_COUPLAGE                                  = SRC.CODE_COUPLAGE
        , TGT.BOOLEEN_TITRE_MAITRE                           = CASE WHEN SRC.BOOLEEN_TITRE_MAITRE = 'O' then 1 else 0 END
        , TGT.CODE_REGLE_GESTION_COUPLAGE                    = SRC.CODE_REGLE_GESTION_COUPLAGE
        , TGT.CODE_RELANCE                                   = SRC.CODE_RELANCE
        , TGT.CODE_MOTIF_ANNULATION                          = SRC.CODE_MOTIF_ANNULATION
        , TGT.DATE_ANNULATION                                = TRY_CONVERT(DATETIME,SRC.DATE_ANNULATION)
        , TGT.CODE_FAMILLE_DECOUVERT                         = SRC.CODE_FAMILLE_DECOUVERT
        , TGT.NB_NUM_DECOUVERTS_PREVUS                       = SRC.NB_NUM_DECOUVERTS_PREVUS
        , TGT.NB_NUM_DECOUVERTS_SERVIS                       = SRC.NB_NUM_DECOUVERTS_SERVIS
        , TGT.DERNIER_NUM_SERVI_DECOUVERT                    = SRC.DERNIER_NUM_SERVI_DECOUVERT
        , TGT.CODE_OPERATEUR_MODIF_NB_NUM_DECOUVERTS_PREVUS  = SRC.CODE_OPERATEUR_MODIF_NB_NUM_DECOUVERTS_PREVUS
        , TGT.DATE_MODIF_NB_NUM_DECOUVERTS_PREVUS            = TRY_CONVERT(DATETIME,SRC.DATE_MODIF_NB_NUM_DECOUVERTS_PREVUS)
        , TGT.CODE_FAMILLE_REASSORTS                         = SRC.CODE_FAMILLE_REASSORTS
        , TGT.CODE_FAMILLE_GRACE_COPY                        = SRC.CODE_FAMILLE_GRACE_COPY
        , TGT.NB_NUM_GRACE_COPY_PREVUS                       = SRC.NB_NUM_GRACE_COPY_PREVUS
        , TGT.CODE_OPERATEUR_MODIF_NB_NUM_GRACE_COPY_PREVUS  = SRC.CODE_OPERATEUR_MODIF_NB_NUM_GRACE_COPY_PREVUS
        , TGT.TOP_REAB                                       = SRC.TOP_REAB
        , TGT.REA_NUM_LOGISTIQUE_ABO                         = SRC.REA_NUM_LOGISTIQUE_ABO
        , TGT.FAIT_GENERATEUR                                = SRC.FAIT_GENERATEUR
        , TGT.STOP_RELANCE                                   = SRC.STOP_RELANCE
        , TGT.FAMILLE_OJD                                    = SRC.FAMILLE_OJD
        , TGT.FIDELITE_PLAFONNEE                             = SRC.FIDELITE_PLAFONNEE
        , TGT.CODE_FAMILLE_SELECTION                         = SRC.CODE_FAMILLE_SELECTION
        , TGT.ECHEANCE_CB                                    = SRC.ECHEANCE_CB
        , TGT.DATE_DERNIER_REGLEMENT                         = TRY_CONVERT(DATETIME,SRC.DATE_DERNIER_REGLEMENT)
        , TGT.DATE_FIN_ABONNEMENT                            = TRY_CONVERT(DATETIME,SRC.DATE_FIN_ABONNEMENT)
        , TGT.DATE_DEBUT_ABONNEMENT                          = TRY_CONVERT(DATETIME,SRC.DATE_DEBUT_ABONNEMENT)
        , TGT.BOOLEEN_TIER_PAYEUR                            = SRC.BOOLEEN_TIER_PAYEUR
		, TGT.NUMERO_RUM				     				 = SRC.NUMERO_RUM		
		, TGT.MONTANT_PREM_FRACTION			    			 = SRC.MONTANT_PREM_FRACTION	
		, TGT.CODE_GUIDE_PREL				     			 = SRC.CODE_GUIDE_PREL		
		, TGT.NUMERO_ICS				     				 = SRC.NUMERO_ICS		
		, TGT.DATE_PREL					     				 = TRY_CONVERT(DATETIME,CONCAT(LEFT(SRC.DATE_PREL, 4), '-', SUBSTRING(CAST(SRC.DATE_PREL AS NVARCHAR(8)), 5, 2), '-',RIGHT(SRC.DATE_PREL, 2)))		
		, TGT.MONTANT_PREL				     				 = SRC.MONTANT_PREL		
		, TGT.NUMERO_FRACTION				    			 = SRC.NUMERO_FRACTION		
		, TGT.CODE_CAISSE				     				 = SRC.CODE_CAISSE		 
		, TGT.CODE_TYPE_RESEAU				     			 = SRC.CODE_TYPE_RESEAU		 
		, TGT.CODE_RESEAU				     				 = SRC.CODE_RESEAU
		--, TGT.CODE_ALIAS_OE                                  = SRC.CODE_ALIAS_OE
		, TGT.NUM_CONTACT_TP								 = SRC.NUM_CONTACT_TP 
        , TGT.SUSPENDU                                       = SRC.SUSPENDU
        , TGT.STATUT                                         = SRC.STATUT
        , TGT.DATE_DEBUT_SUSPENSION                          = TRY_CONVERT(DATETIME,SRC.DATE_DEBUT_SUSPENSION)
/*
		, TGT.TIER_PAYEUR				= SRC.TIER_PAYEUR
		, TGT.CODE_AGENCE_EMETTRICE                          = SRC.CODE_AGENCE_EMETTRICE
		, TGT.CODE_AGENCE_MAGASIN                            = SRC.CODE_AGENCE_MAGASIN
		
		, TGT.SCORE_REACT_MAJEUR                             = SRC.SCORE_REACT_MAJEUR
		, TGT.SCORE_REACT_MINEUR                             = SRC.SCORE_REACT_MINEUR
		, TGT.SCORE_REACT_SUPER_MINEUR                       = SRC.SCORE_REACT_SUPER_MINEUR
		, TGT.CODE_EDITEUR                                   = SRC.CODE_EDITEUR
		, TGT.LIB_ALIAS_OE				     = SRC.LIB_ALIAS_OE
*/			
	--, TGT.CANAL_DE_RECRUTEMENT			     = SRC.CANAL_DE_RECRUTEMENT	
FROM DBO.DATA_UHM_LOGISTIQUE_ABONNEMENT AS TGT 
    INNER JOIN DBO.TMP_MATCH_ORD AS MAT WITH(NOLOCK)
        ON MAT.USERID = TGT.USERID
    INNER JOIN DBO.SYNC_UHM_LOGISTIQUE_ABONNEMENT AS SRC WITH(NOLOCK)
        ON SRC.ID = MAT.SYNCID
        AND SRC.NUM_LOGISTIQUE_ABONNEMENT = TGT.NUM_LOGISTIQUE_ABONNEMENT		



  
-- ... THEN INSERT 
INSERT INTO DBO.DATA_UHM_LOGISTIQUE_ABONNEMENT  
    (CREATED_DT
	, USERID
    , NUM_LOGISTIQUE_ABONNEMENT
    , NUM_COMMANDE
    , NUM_LIGNE_COMMANDE
    , NUM_CONTACT
    , SOCIETE
    , TITRE
    , TITRE_LIB
    , EDITION
    , NUM_PRODUIT
    , DATE_CREATION
    , OPERATEUR_CREATION
    , DATE_DERNIERE_MODIFICATION
    , OPERATEUR_MODIFICATION
    , NUM_CONTRAT
    , CODE_OPERATION_EDITEUR
    , CODE_PROPOSITION_CO
    , CODE_REF_CO
    , NUM_DEBUT_ABO
    , NUM_FIN_ABO
    , NB_NUM_SOUSCRITS
    , QUANTITE
    , PREMIER_NUM_SERVI
    , DATE_PREMIER_NUM_SERVI
    , DERNIER_NUM_SERVI
    , DATE_DERNIER_NUM_SERVI
    , NUM_A_PARAITRE_REAB
    , CODE_REGLEMENT
    , CODE_VENTILATION
    , CODE_SITUATION
    , IDENTIFIANT_TARIFS
    , NUM_EVOLUTION
    , MONTANT_PRODUIT_TTC
    , CODE_ACHEMINEMENT
    , MONTANT_ACHEMINEMENT_PRODUIT_TTC
    , TX_REMISE_PRODUIT
    , MONTANT_REMISE_PRODUIT
    , MONTANT_REMISE_SUPP_PRODUIT
    , MONTANT_TOTAL_DU_PRODUIT_TTC
    , TOP_LOGISTIQUE_PRIME
    , CODE_EXPEDITION
    , CODE_COUPLAGE
    , BOOLEEN_TITRE_MAITRE
    , CODE_REGLE_GESTION_COUPLAGE
    , CODE_RELANCE
    , CODE_MOTIF_ANNULATION
    , DATE_ANNULATION
    , CODE_FAMILLE_DECOUVERT
    , NB_NUM_DECOUVERTS_PREVUS
    , NB_NUM_DECOUVERTS_SERVIS
    , DERNIER_NUM_SERVI_DECOUVERT
    , CODE_OPERATEUR_MODIF_NB_NUM_DECOUVERTS_PREVUS
    , DATE_MODIF_NB_NUM_DECOUVERTS_PREVUS
    , CODE_FAMILLE_REASSORTS
    , CODE_FAMILLE_GRACE_COPY
    , NB_NUM_GRACE_COPY_PREVUS
    , CODE_OPERATEUR_MODIF_NB_NUM_GRACE_COPY_PREVUS
    , TOP_REAB
    , REA_NUM_LOGISTIQUE_ABO
    , FAIT_GENERATEUR
    , STOP_RELANCE
    , FAMILLE_OJD
    , FIDELITE_PLAFONNEE
    , CODE_FAMILLE_SELECTION
    , ECHEANCE_CB
    , DATE_DERNIER_REGLEMENT
    , DATE_FIN_ABONNEMENT
    , DATE_DEBUT_ABONNEMENT
    , BOOLEEN_TIER_PAYEUR
    , NUMERO_RUM
    , MONTANT_PREM_FRACTION
    , CODE_GUIDE_PREL
    , NUMERO_ICS
    , DATE_PREL
    , MONTANT_PREL
    , NUMERO_FRACTION
    , CODE_CAISSE
    , CODE_TYPE_RESEAU
    , CODE_RESEAU
	--, CODE_ALIAS_OE
	, NUM_CONTACT_TP
    , SUSPENDU
    , STATUT 
    , DATE_DEBUT_SUSPENSION
/*
	, TIER_PAYEUR									 
	, CODE_AGENCE_EMETTRICE                          
	, CODE_AGENCE_MAGASIN                            
	                                  
	, SCORE_REACT_MAJEUR                             
	, SCORE_REACT_MINEUR                             
	, SCORE_REACT_SUPER_MINEUR                       
	, CODE_EDITEUR                                   
	, LIB_ALIAS_OE	
*/			                     
    --,CANAL_DE_RECRUTEMENT
    ) 
SELECT
     GETDATE()
	, MAT.USERID
    , SRC.NUM_LOGISTIQUE_ABONNEMENT
    , SRC.NUM_COMMANDE
    , SRC.NUM_LIGNE_COMMANDE
    , SRC.NUM_CONTACT
    , SRC.SOCIETE
    , SRC.TITRE
    , SRC.TITRE_LIB
    , SRC.EDITION
    , SRC.NUM_PRODUIT
    , TRY_CONVERT(DATETIME,SRC.DATE_CREATION)
    , SRC.OPERATEUR_CREATION
    , TRY_CONVERT(DATETIME,SRC.DATE_DERNIERE_MODIFICATION)
    , SRC.OPERATEUR_MODIFICATION
    , SRC.NUM_CONTRAT
    , SRC.CODE_OPERATION_EDITEUR
    , SRC.CODE_PROPOSITION_CO
    , SRC.CODE_REF_CO
    , SRC.NUM_DEBUT_ABO
    , SRC.NUM_FIN_ABO
    , SRC.NB_NUM_SOUSCRITS
    , SRC.QUANTITE
    , SRC.PREMIER_NUM_SERVI
    , TRY_CONVERT(DATETIME,SRC.DATE_PREMIER_NUM_SERVI)
    , SRC.DERNIER_NUM_SERVI
    , TRY_CONVERT(DATETIME,SRC.DATE_DERNIER_NUM_SERVI)
    , SRC.NUM_A_PARAITRE_REAB
    , SRC.CODE_REGLEMENT
    , SRC.CODE_VENTILATION
    , SRC.CODE_SITUATION
    , SRC.IDENTIFIANT_TARIFS
    , SRC.NUM_EVOLUTION
    , SRC.MONTANT_PRODUIT_TTC
    , SRC.CODE_ACHEMINEMENT
    , SRC.MONTANT_ACHEMINEMENT_PRODUIT_TTC
    , SRC.TX_REMISE_PRODUIT
    , SRC.MONTANT_REMISE_PRODUIT
    , SRC.MONTANT_REMISE_SUPP_PRODUIT
    , SRC.MONTANT_TOTAL_DU_PRODUIT_TTC
    , SRC.TOP_LOGISTIQUE_PRIME
    , SRC.CODE_EXPEDITION
    , SRC.CODE_COUPLAGE
    , CASE WHEN SRC.BOOLEEN_TITRE_MAITRE = 'O' then 1 else 0 END
    , SRC.CODE_REGLE_GESTION_COUPLAGE
    , SRC.CODE_RELANCE
    , SRC.CODE_MOTIF_ANNULATION
    , TRY_CONVERT(DATETIME,SRC.DATE_ANNULATION)
    , SRC.CODE_FAMILLE_DECOUVERT
    , SRC.NB_NUM_DECOUVERTS_PREVUS
    , SRC.NB_NUM_DECOUVERTS_SERVIS
    , SRC.DERNIER_NUM_SERVI_DECOUVERT
    , SRC.CODE_OPERATEUR_MODIF_NB_NUM_DECOUVERTS_PREVUS
    , TRY_CONVERT(DATETIME,SRC.DATE_MODIF_NB_NUM_DECOUVERTS_PREVUS)
    , SRC.CODE_FAMILLE_REASSORTS
    , SRC.CODE_FAMILLE_GRACE_COPY
    , SRC.NB_NUM_GRACE_COPY_PREVUS
    , SRC.CODE_OPERATEUR_MODIF_NB_NUM_GRACE_COPY_PREVUS
    , SRC.TOP_REAB
    , SRC.REA_NUM_LOGISTIQUE_ABO
    , SRC.FAIT_GENERATEUR
    , SRC.STOP_RELANCE
    , SRC.FAMILLE_OJD
    , SRC.FIDELITE_PLAFONNEE
    , SRC.CODE_FAMILLE_SELECTION
    , SRC.ECHEANCE_CB
    , TRY_CONVERT(DATETIME,SRC.DATE_DERNIER_REGLEMENT)
    , TRY_CONVERT(DATETIME,SRC.DATE_FIN_ABONNEMENT)
    , TRY_CONVERT(DATETIME,SRC.DATE_DEBUT_ABONNEMENT)
    , SRC.BOOLEEN_TIER_PAYEUR 
    , SRC.NUMERO_RUM
    , SRC.MONTANT_PREM_FRACTION
    , SRC.CODE_GUIDE_PREL
    , SRC.NUMERO_ICS
    , TRY_CONVERT(DATETIME,CONCAT(LEFT(SRC.DATE_PREL, 4), '-', SUBSTRING(CAST(SRC.DATE_PREL AS NVARCHAR(8)), 5, 2), '-',RIGHT(SRC.DATE_PREL, 2)))
    , SRC.MONTANT_PREL
    , SRC.NUMERO_FRACTION
    , SRC.CODE_CAISSE
    , SRC.CODE_TYPE_RESEAU
    , SRC.CODE_RESEAU
	--, SRC.CODE_ALIAS_OE
	, SRC.NUM_CONTACT_TP
    , SRC.SUSPENDU
    , SRC.STATUT 
    , TRY_CONVERT(DATETIME,SRC.DATE_DEBUT_SUSPENSION)
/*
	, SRC.TIER_PAYEUR
	, SRC.CODE_AGENCE_EMETTRICE
	, SRC.CODE_AGENCE_MAGASIN
	
	, SRC.SCORE_REACT_MAJEUR
	, SRC.SCORE_REACT_MINEUR
	, SRC.SCORE_REACT_SUPER_MINEUR
	, SRC.CODE_EDITEUR
	, SRC.LIB_ALIAS_OE
*/				
   -- , SRC.CANAL_DE_RECRUTEMENT      
FROM DBO.SYNC_UHM_LOGISTIQUE_ABONNEMENT AS SRC WITH(NOLOCK)
    INNER JOIN DBO.TMP_MATCH_ORD AS MAT WITH(NOLOCK)
        ON MAT.SYNCID = SRC.ID
WHERE  (SRC.OPTI_REJECTED = 0
OR SRC.OPTI_REJECTED IS NULL)
AND NOT EXISTS (
    SELECT 1
    FROM DBO.DATA_UHM_LOGISTIQUE_ABONNEMENT AS CHK WITH(NOLOCK)
    WHERE CHK.USERID = MAT.USERID
    AND CHK.NUM_LOGISTIQUE_ABONNEMENT = SRC.NUM_LOGISTIQUE_ABONNEMENT
);


-- ------------------ UPDATE NAME TITRE_LIB -------------------- -- 

UPDATE DATA_UHM_LOGISTIQUE_ABONNEMENT
SET TITRE_LIB = 'Réponse à tout'
WHERE TITRE_LIB LIKE '%ponse%' AND TITRE = 'RAT'

UPDATE DATA_UHM_LOGISTIQUE_ABONNEMENT
SET TITRE_LIB = 'Comment ça marche'
WHERE TITRE_LIB LIKE '%marche%' AND TITRE = 'CCM'


-- ------------------ CLEAN UP -------------------- -- 
  
  
IF OBJECT_ID('DBO.TMP_MATCH_ORD', 'U') IS NOT NULL 
BEGIN; 
    DROP TABLE DBO.TMP_MATCH_ORD; 
END; 
  
  
-- ------------------ END LOGS ------------------ -- 
  
  
UPDATE DBO.CFG_SYNCDETAILS SET 
    LAST_RUNTIME = CONVERT(NVARCHAR(8), GETDATE() - LAST_RUNDT, 114) 
    , LAST_SUCCESSDT = GETDATE() 
WHERE TASK = @TASK; 
  
  
END TRY 
  
  
-- ------------------ CATCH IF ERROR -------------------- -- 
  
  
BEGIN CATCH 
    -- DECLARATION - ERROR PART 
    DECLARE @ERRORMESSAGE NVARCHAR(4000);   
    DECLARE @ERRORSEVERITY INT;   
    DECLARE @ERRORSTATE INT; 
    -- INIT - ERROR PART 
    SET @ERRORMESSAGE = CONVERT(NVARCHAR(50), ERROR_LINE()) + ' : ' + ERROR_MESSAGE();   
    SET @ERRORSEVERITY = ERROR_SEVERITY();   
    SET @ERRORSTATE = ERROR_STATE();   
    -- UPDATING LOGS W/ ERROR MESSAGE 
    UPDATE DBO.CFG_SYNCDETAILS SET  
        ERRORMSG = CONVERT(NVARCHAR(20), GETDATE()) + ' - LIGNE ' + @ERRORMESSAGE 
        , LAST_RUNTIME = CONVERT(NVARCHAR(8), GETDATE() - LAST_RUNDT, 114) 
    WHERE TASK = @TASK; 
    -- RAISING ERROR 
    RAISERROR(@ERRORMESSAGE        -- MESSAGE TEXT.   
            , @ERRORSEVERITY    -- SEVERITY.   
            , @ERRORSTATE        -- STATE.   
    ); 
END CATCH 
  
  
END
