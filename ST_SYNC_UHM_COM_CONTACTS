AS 
/* 
****************** DOCUMENTATION TEMPLATE ******************** 
-- DID AUTHOR: ERICK VAN HOOREN 
-- DID CREATIONDATE: 2022-09-12 
-- DID VERSION: 1.0.0 
-- DID DESCRIPTION:  
-- DID BUSINESSRULES: EVERY DAY  
-- DID LASTMODIFIEDBY:  
******************* DOCUMENTATION TEMPLATE ********************  
*/ 


DECLARE @TASK NVARCHAR(50) = 'ST_SYNC_UHM_COM_CONTACTS'; 


BEGIN 
SET NOCOUNT ON; 
BEGIN TRY 
 

-- ------------------ LOGS -------------------- --  
IF EXISTS (SELECT 1 FROM DBO.CFG_SYNCDETAILS WHERE TASK = @TASK) 
BEGIN; 
    UPDATE DBO.CFG_SYNCDETAILS SET LAST_RUNDT = GETDATE(), ERRORMSG = NULL WHERE TASK = @TASK; 
END; 
ELSE 
BEGIN; 
    INSERT INTO DBO.CFG_SYNCDETAILS (TASK, LAST_RUNDT) VALUES (@TASK, GETDATE()); 
END; 
  
  
-- ------------------ PK & IDX ------------------ -- 
  
  
IF NOT EXISTS (SELECT 1 FROM SYS.INDEXES AS I WITH(NOLOCK) WHERE I.NAME = 'IDX_MATCH_NUM_CONTACT' AND OBJECT_ID = OBJECT_ID('DBO.SYNC_UHM_COM_CONTACTS', 'U')) 
BEGIN; 
    CREATE NONCLUSTERED INDEX IDX_MATCH_NUM_CONTACT ON [DBO].[SYNC_UHM_COM_CONTACTS] ([NUM_CONTACT]); 
END;  

-- ------------------ REJECT MNGT ------------------ -- 
  
  
-- EMPTY BUSINESS KEY 
UPDATE TGT SET 
      TGT.OPTI_REJECTED        = 2 
    , TGT.OPTI_REJECTED_REASON = 'NUM_CONTACT' 
FROM DBO.SYNC_UHM_COM_CONTACTS AS TGT 
WHERE (TGT.OPTI_REJECTED = 0  
OR TGT.OPTI_REJECTED IS NULL) 
AND (TGT.NUM_CONTACT IS NULL  
OR TGT.NUM_CONTACT = '')
;  
  
  
-- ------------------ MATCH TABLE ------------------ -- 
 
-- CHECK 
IF OBJECT_ID('DBO.TMP_MATCH_COM_CONTACT', 'U') IS NOT NULL 
BEGIN; 
    DROP TABLE DBO.TMP_MATCH_COM_CONTACT; 
END; 
  
-- CREATE 
CREATE TABLE DBO.TMP_MATCH_COM_CONTACT( 
      SYNCID INT NOT NULL 
    , USERID INT NOT NULL 
    , PRIMARY KEY (SYNCID, USERID) 
); 
  
-- FILL ID_MAGELLAN
INSERT INTO DBO.TMP_MATCH_COM_CONTACT 
    ( SYNCID 
    , USERID ) 
SELECT     
      SRC.ID AS SYNCID 
    , USR.ID AS USERID 
FROM DBO.SYNC_UHM_COM_CONTACTS AS SRC WITH(NOLOCK)  
    INNER JOIN DBO.USERS_UHM_CONTACTS AS USR WITH(NOLOCK)  
        ON SRC.NUM_CONTACT = USR.NUM_CONTACT
WHERE (SRC.OPTI_REJECTED = 0  
OR SRC.OPTI_REJECTED IS NULL)
; 
  
 
-- ------------------ UPSERT ------------------ -- 
  
-- UPDATE FIRST... 
UPDATE TGT SET 
		  TGT.MAIL								= SRC.MAIL
		, TGT.NUM_CLIENT                    	= SRC.NUM_CLIENT
		, TGT.CIV_CONTACT_ORIGINE           	= SRC.CIV_CONTACT_ORIGINE
		, TGT.CIV_CONTACT_ALIAS             	= SRC.CIV_CONTACT_ALIAS
		, TGT.NOM                           	= SRC.NOM
		, TGT.PRENOM                        	= SRC.PRENOM
		, TGT.CODE_FORME_JURIDIQUE          	= SRC.CODE_FORME_JURIDIQUE
		, TGT.RAISON_SOCIALE                	= SRC.RAISON_SOCIALE
		, TGT.RAISON_SOCIALE_COMPL          	= SRC.RAISON_SOCIALE_COMPL
		, TGT.SERVICE                       	= SRC.SERVICE
		, TGT.FONCTION_CONTACT_ORIGINE      	= SRC.FONCTION_CONTACT_ORIGINE
		, TGT.FONCTION_CONTACT_ALIAS        	= SRC.FONCTION_CONTACT_ALIAS
		, TGT.COMPLEMENT_NOM                	= SRC.COMPLEMENT_NOM
		, TGT.VOLET1                        	= SRC.VOLET1
		, TGT.VOLET2                        	= SRC.VOLET2
		, TGT.VOLET3                        	= SRC.VOLET3
		, TGT.VOLET4                        	= SRC.VOLET4
		, TGT.VOLET5                        	= SRC.VOLET5
		, TGT.NUM_RUE                       	= SRC.NUM_RUE
		, TGT.CODE_INSEE                    	= SRC.CODE_INSEE
		, TGT.CODE_ZIP                      	= SRC.CODE_ZIP
		, TGT.VILLE                         	= SRC.VILLE
		, TGT.CODE_POSTAL                   	= SRC.CODE_POSTAL
		, TGT.PAYS                          	= SRC.PAYS
		, TGT.DATE_MODIFICATION_MAGELLAN    	= SRC.MAGELLAN_MODIFICATION_DT			
        , TGT.MODIFIED_DT                   = GETDATE()
FROM DBO.USERS_UHM_CONTACTS AS TGT 
    INNER JOIN DBO.TMP_MATCH_COM_CONTACT AS MAT WITH(NOLOCK) 
        ON MAT.USERID = TGT.ID 
    INNER JOIN DBO.SYNC_UHM_COM_CONTACTS AS SRC WITH(NOLOCK) 
        ON  SRC.NUM_CONTACT         = TGT.NUM_CONTACT

                

  
-- ... THEN INSERT 
INSERT INTO DBO.USERS_UHM_CONTACTS  
    ( CREATED_DT, MODIFIED_DT
	, MAIL
	, NUM_CONTACT_LCLE
	, NUM_CONTACT_CRYPTE
	, NUM_CLIENT
	, CIV_CONTACT_ORIGINE
	, CIV_CONTACT_ALIAS
	, NOM
	, PRENOM
	, CODE_FORME_JURIDIQUE
	, RAISON_SOCIALE
	, RAISON_SOCIALE_COMPL
	, SERVICE
	, FONCTION_CONTACT_ORIGINE
	, FONCTION_CONTACT_ALIAS
	, COMPLEMENT_NOM
	, VOLET1
	, VOLET2
	, VOLET3
	, VOLET4
	, VOLET5
	, NUM_RUE
	, CODE_INSEE
	, CODE_ZIP
	, VILLE
	, CODE_POSTAL
	, PAYS
	, NUM_CONTACT
	, DATE_CREATION_MAGELLAN
	, DATE_MODIFICATION_MAGELLAN
	, MOBILE
    ) 
SELECT
      GETDATE(), GETDATE()
	, SRC.MAIL
	, SRC.NUM_CONTACT_LCLE
	, SRC.NUM_CONTACT_CRYPTE
	, SRC.NUM_CLIENT
	, SRC.CIV_CONTACT_ORIGINE
	, SRC.CIV_CONTACT_ALIAS
	, SRC.NOM
	, SRC.PRENOM
	, SRC.CODE_FORME_JURIDIQUE
	, SRC.RAISON_SOCIALE
	, SRC.RAISON_SOCIALE_COMPL
	, SRC.SERVICE
	, SRC.FONCTION_CONTACT_ORIGINE
	, SRC.FONCTION_CONTACT_ALIAS
	, SRC.COMPLEMENT_NOM
	, SRC.VOLET1
	, SRC.VOLET2
	, SRC.VOLET3
	, SRC.VOLET4
	, SRC.VOLET5
	, SRC.NUM_RUE
	, SRC.CODE_INSEE
	, SRC.CODE_ZIP
	, SRC.VILLE
	, SRC.CODE_POSTAL
	, SRC.PAYS
	, SRC.NUM_CONTACT
	, SRC.MAGELLAN_CREATION_DT
	, SRC.MAGELLAN_MODIFICATION_DT
	, SRC.TELEPHONE_PORTABLE
FROM DBO.SYNC_UHM_COM_CONTACTS AS SRC WITH(NOLOCK) 
WHERE  (SRC.OPTI_REJECTED = 0
OR SRC.OPTI_REJECTED IS NULL) 
AND NOT EXISTS ( 
    SELECT 1  
    FROM DBO.USERS_UHM_CONTACTS AS TGT WITH(NOLOCK)  
    WHERE SRC.NUM_CONTACT = TGT.NUM_CONTACT)

-- ------------------ CLEAN UP -------------------- -- 
  
  
IF OBJECT_ID('DBO.TMP_MATCH_COM_CONTACT', 'U') IS NOT NULL 
BEGIN; 
    DROP TABLE DBO.TMP_MATCH_COM_CONTACT; 
END; 
  
  

-- ------------------ END LOGS ------------------ -- 
  
  
UPDATE DBO.CFG_SYNCDETAILS SET 
    LAST_RUNTIME = CONVERT(NVARCHAR(8), GETDATE() - LAST_RUNDT, 114) 
    , LAST_SUCCESSDT = GETDATE() 
WHERE TASK = @TASK; 
  
  
END TRY 
  
  
-- ------------------ CATCH IF ERROR -------------------- -- 
  
  
BEGIN CATCH 
    -- DECLARATION - ERROR PART 
    DECLARE @ERRORMESSAGE NVARCHAR(4000);   
    DECLARE @ERRORSEVERITY INT;   
    DECLARE @ERRORSTATE INT; 
    -- INIT - ERROR PART 
    SET @ERRORMESSAGE = CONVERT(NVARCHAR(50), ERROR_LINE()) + ' : ' + ERROR_MESSAGE();   
    SET @ERRORSEVERITY = ERROR_SEVERITY();   
    SET @ERRORSTATE = ERROR_STATE();   
    -- UPDATING LOGS W/ ERROR MESSAGE 
    UPDATE DBO.CFG_SYNCDETAILS SET  
        ERRORMSG = CONVERT(NVARCHAR(20), GETDATE()) + ' - LIGNE ' + @ERRORMESSAGE 
        , LAST_RUNTIME = CONVERT(NVARCHAR(8), GETDATE() - LAST_RUNDT, 114) 
    WHERE TASK = @TASK; 
    -- RAISING ERROR 
    RAISERROR(@ERRORMESSAGE        -- MESSAGE TEXT.   
            , @ERRORSEVERITY    -- SEVERITY.   
            , @ERRORSTATE        -- STATE.   
    ); 
END CATCH 
  
  
END
